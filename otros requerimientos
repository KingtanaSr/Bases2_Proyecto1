create or replace trigger actualizar_precio_producto
before insert on fact_producto
for each row
declare 
    id_prod number;
begin 
    id_prod := :new.id_producto;
    if :new.cantidad>5 then 
        insert into bitacora (fecha_hora, precio_anterior) values (SYSDATE, (SELECT precio FROM producto WHERE id_producto = id_prod));
        update producto set precio = precio * 5 where id_producto = id_prod;
        
    end if;
end;
/


SET SERVEROUTPUT ON;

CREATE OR REPLACE PACKAGE paquete_consultas AS 
    FUNCTION total_ventas_sucursal (nombre_sucursal IN VARCHAR2) RETURN NUMBER;
    FUNCTION Cant_producto(nombre_producto IN VARCHAR2) RETURN NUMBER;
    procedure total_ventas_empleado (nombre varchar2);
END paquete_consultas;
/

CREATE OR REPLACE PACKAGE BODY paquete_consultas AS

    FUNCTION total_ventas_sucursal(nombre_sucursal IN VARCHAR2) RETURN NUMBER IS
        total NUMBER := 0;
    BEGIN 
        SELECT COUNT(id_factura)
        INTO total
        FROM sucursal s 
        LEFT JOIN factura_venta fv ON fv.id_sucursal = s.id_sucursal
        WHERE s.nombre_facturacion = nombre_sucursal;

        RETURN total;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 0;
    END total_ventas_sucursal;

    FUNCTION Cant_producto(nombre_producto IN VARCHAR2) RETURN NUMBER IS
        total_productos  NUMBER := 0;
        total_vendidos   NUMBER := 0;
        total_total      NUMBER := 0;
    BEGIN 
        SELECT cantidad
        INTO total_productos
        FROM producto
        WHERE nombre = nombre_producto;

        SELECT SUM(fp.cantidad)
        INTO total_vendidos
        FROM fact_producto fp
        JOIN producto p ON fp.id_producto = p.id_producto
        WHERE p.nombre = nombre_producto;

        total_total := total_productos - total_vendidos;
        if total_total<0 then return 0;
        end if;
        RETURN total_total;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 0;
    END Cant_producto;
    
    PROCEDURE total_ventas_empleado (nombre varchar2) IS 
        total number:=0;
		BEGIN 
            select count(fv.id_factura) into total
            from empleado e
            left join sucursal s on e.id_sucursal = s.id_sucursal
            left join factura_venta fv on  s.id_sucursal =  fv.id_sucursal
            where nombre = e.nombre;
			DBMS_OUTPUT.Put_Line('El total de ventas de ' || nombre || ' son ' || total);
		END;

END paquete_consultas;
/


CREATE OR REPLACE PACKAGE paquete_modificaciones AS 
    PROCEDURE mod_empleado_sucursal(nombre_empleado VARCHAR2, nombre_sucursal VARCHAR2);
    PROCEDURE mod_Cant_producto(nombre_producto VARCHAR2, cantidad_producto NUMBER);
    FUNCTION actualizar_precio_prod(nombre_producto IN VARCHAR2, precio_nuevo IN NUMBER) RETURN NUMBER;
END paquete_modificaciones;
/

CREATE OR REPLACE PACKAGE BODY paquete_modificaciones AS

    PROCEDURE mod_empleado_sucursal(nombre_empleado VARCHAR2, nombre_sucursal VARCHAR2) IS 
        id_emp NUMBER;
        id_suc NUMBER;
    BEGIN 
        SELECT id_empleado INTO id_emp
        FROM empleado
        WHERE nombre = nombre_empleado;

        SELECT id_sucursal INTO id_suc
        FROM sucursal
        WHERE nombre_facturacion = nombre_sucursal;

        UPDATE empleado
        SET id_sucursal = id_suc
        WHERE id_empleado = id_emp;

        DBMS_OUTPUT.PUT_LINE('La sucursal del empleado ' || nombre_empleado || ' se ha actualizado.');
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('No se encontró el empleado o la sucursal especificados.');
    END mod_empleado_sucursal;

    PROCEDURE mod_Cant_producto(nombre_producto VARCHAR2, cantidad_producto NUMBER) IS 
        total_actual NUMBER;
        total_nuevo NUMBER;
    BEGIN 
        SELECT cantidad INTO total_actual
        FROM producto
        WHERE nombre = nombre_producto;

        total_nuevo := total_actual + cantidad_producto;

        UPDATE producto
        SET cantidad = total_nuevo
        WHERE nombre = nombre_producto;

        DBMS_OUTPUT.PUT_LINE('La nueva cantidad del producto ' || nombre_producto || ' es ' || total_nuevo || '.');
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('No se encontró el producto especificado.');
    END mod_Cant_producto;
    
    FUNCTION actualizar_precio_prod(nombre_producto IN VARCHAR2, precio_nuevo IN NUMBER) RETURN NUMBER IS
        precio_anterior number:=0;
    BEGIN  
        select precio into precio_anterior
        from producto
        where nombre = nombre_producto;
        UPDATE producto
        SET precio = precio_nuevo
        WHERE nombre = nombre_producto;
        DBMS_OUTPUT.PUT_LINE('Se actualizo correctamente el precio del producto');
        return precio_anterior;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Ocurrió un error al actualizar el precio del producto.');
            RETURN 0;
    END actualizar_precio_prod;

END paquete_modificaciones;
/
